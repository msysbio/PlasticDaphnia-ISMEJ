library(ggplot2)
library(ggpubr)
library(tidyr)
library(dplyr)
# Load the data
df <- read.csv("/Users/u0145079/Library/CloudStorage/OneDrive-KULeuven/Desktop/PlasticDaphnia/Publication/tables/Fields shotgun/ARG_abundances.csv",row.names=1)
# Transform data from wide to long format
long_data <- gather(df, Key, Value, -Category)
# Calculate average values for each enzyme family by pond type
average_values <- long_data %>%
group_by(Category) %>%
summarize(Average = mean(Value))
colors <- c("Low" = "#6885d0", "High" = "#cb5658")
bar_chart <- ggplot(average_values, aes(x=Category, y=Average, fill=Category)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y="Average Value") +
scale_fill_manual(values = colors) +  # Use scale_fill_manual for fill colors
theme(axis.text.x = element_text(angle = 45, hjust = 1, color=colors[average_values$Category]),  # Color x-axis labels
axis.text.y = element_text(),
legend.position = "none") +  # Remove the legend
labs(y="Average Counts Per Million (CPM)") +
theme_pubr() # or theme_minimal() if theme_pubr() is not defined
bar_chart
colors <- c("Low" = "#6885d0", "High" = "#cb5658")
bar_chart <- ggplot(df, aes(x=rownames(df), y=Average.ARG.abundance, fill=Category)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y="Average Counts Per Million(CPM) for ARGs per Pond  ",x="") +
scale_color_manual(values = colors)  + # Specify your colors here
theme(axis.text.x = element_text(angle = 90, hjust = 1), # Adjust text angle and justification for readability
axis.text.y = element_text(),
legend.title = element_text(face = "bold")) +
theme_pubr()
bar_chart
#AR-genes
wilcox.test(Average.ARG.abundance ~ Category,data=df) #<0.05
View(df)
rownames(df)
colors <- c("Low" = "#6885d0", "High" = "#cb5658")
bar_chart <- ggplot(df, aes(x=rownames(df), y=Average.ARG.abundance, fill=Category)) +
geom_bar(stat="identity", position=position_dodge()) +
labs(y="Average Counts Per Million(CPM) for ARGs per Pond  ", x="") +
scale_fill_manual(values = colors) +  # Corrected to scale_fill_manual
theme(axis.text.x = element_text(angle = 90, hjust = 1),  # Adjust text angle and justification for readability
axis.text.y = element_text(),
legend.title = element_text(face = "bold")) +
theme_pubr()
bar_chart
